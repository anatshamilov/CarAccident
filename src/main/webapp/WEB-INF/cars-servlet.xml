<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd">

	<!-- Support the @Autowire annotation -->
	<context:annotation-config />

	<!-- Enable scanning the provided codebase for annotations, instead of configuring 
		everything in XML -->
	<context:component-scan base-package="com.sap.river.cars" />

	<!-- Support annotation driven configuration for MVC stuff, and enable matrix 
		variables in @RequestMapping annotations -->
	<mvc:annotation-driven enable-matrix-variables="true" />
	
	<!-- Register the default handler at the lowest priority -->
	<mvc:default-servlet-handler/>

	<!-- Support file uploads as multipart elements -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />

	<!-- Register the view resolver. Use the InternalResourceViewResolver in this example, others exist that work differently -->
	<bean id="viewsResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>
